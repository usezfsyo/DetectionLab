Vagrant.configure("2") do |config|

  config.vm.define "logger" do |cfg|
    cfg.vm.box = "bento/ubuntu-16.04"
    cfg.vm.hostname = "logger"
    config.vm.provision :shell, path: "bootstrap.sh"
    cfg.vm.network :private_network, ip: "10.0.4.5", gateway: "10.0.4.1", dns: "8.8.8.8"

    cfg.vm.provider "vmware_fusion" do |v, override|
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_esxi" do |ve, override|
      ve.esxi_hostname = "hp-vmware"
      ve.esxi_username = "root"
      ve.esxi_password = "prompt:"
      ve.esxi_virtual_network = "Vlan_20"
      ve.esxi_disk_store = "RAID_Storage"
      ve.esxi_guest_name = "logger"
      ve.esxi_guest_memsize = "2048"
      ve.esxi_guest_numvcpus = "1"
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "dc" do |cfg|
    cfg.vm.box = "../Boxes/windows_2016_virtualbox.box"
    cfg.vm.hostname = "dc"

    # use the plaintext WinRM transport and force it to use basic authentication.
    # NB this is needed because the default negotiate transport stops working
    #    after the domain controller is installed.
    #    see https://groups.google.com/forum/#!topic/vagrant-up/sZantuCM0q4
    cfg.winrm.transport = :plaintext
    cfg.winrm.basic_auth_only = true

    cfg.vm.communicator = "winrm"
    cfg.vm.network :private_network, ip: "10.0.4.2", gateway: "10.0.4.1"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: false, args: "10.0.4.2"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-caldera-agent.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/configure-ou.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/configure-wef-gpo.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/configure-powershelllogging.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/configure-AuditingPolicyGPOs.ps1", privileged: true
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: true

    cfg.vm.provider "vmware_fusion" do |v, override|
      override.vm.box = "../Boxes/windows_2016_vmware.box"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_esxi" do |ve, override|
      override.vm.box = "../Boxes/windows_2016_vmware.box"
      ve.esxi_hostname = "hp-vmware"
      ve.esxi_username = "root"
      ve.esxi_password = "prompt:"
      ve.esxi_virtual_network = "Vlan_20"
      ve.esxi_disk_store = "RAID_Storage"
      ve.esxi_guest_name = "dc"
      ve.esxi_guest_memsize = "2048"
      ve.esxi_guest_numvcpus = "1"
    end    

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "wef" do |cfg|
    cfg.vm.box = "../Boxes/windows_2016_virtualbox.box"
    cfg.vm.hostname = "wef"

    cfg.vm.communicator = "winrm"
    cfg.vm.network :private_network, ip: "10.0.4.3", gateway: "10.0.4.1", dns: "10.0.4.2"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: false, args: "-ip 10.0.4.3 -dns 10.0.4.2"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-wefsubscriptions.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-windows_ta.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-caldera-agent.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/configure-pslogstranscriptsshare.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: true
    cfg.vm.provision "shell", inline: "Set-SmbServerConfiguration -AuditSmb1Access $true -Force", privileged: true

    cfg.vm.provider "vmware_fusion" do |v, override|
      override.vm.box = "../Boxes/windows_2016_vmware.box"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_esxi" do |ve, override|
      override.vm.box = "../Boxes/windows_2016_vmware.box"
      ve.esxi_hostname = "hp-vmware"
      ve.esxi_username = "root"
      ve.esxi_password = "prompt:"
      ve.esxi_virtual_network = "Vlan_20"
      ve.esxi_disk_store = "RAID_Storage"
      ve.esxi_guest_name = "wef"
      ve.esxi_guest_memsize = "2048"
      ve.esxi_guest_numvcpus = "1"
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end

  config.vm.define "win10" do |cfg|
    cfg.vm.box = "../Boxes/windows_10_virtualbox.box"
    cfg.vm.hostname = "win10"

    cfg.vm.communicator = "winrm"
    cfg.vm.network :private_network, ip: "10.0.4.4", gateway: "10.0.4.1", dns: "10.0.4.2"

    cfg.vm.provision "shell", path: "scripts/fix-second-network.ps1", privileged: false, args: "-ip 10.0.4.4 -dns 10.0.4.2"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "reload"
    cfg.vm.provision "shell", path: "scripts/provision.ps1", privileged: false
    cfg.vm.provision "shell", path: "scripts/download_palantir_wef.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/download_palantir_osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-splunkuf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-utilities.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-osquery.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-caldera-agent.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-inputsconf.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-sysinternals.ps1", privileged: true
    cfg.vm.provision "shell", path: "scripts/install-autorunstowineventlog.ps1", privileged: true

    cfg.vm.provider "vmware_fusion" do |v, override|
      override.vm.box = "../Boxes/windows_10_vmware.box"
      v.vmx["gui.fullscreenatpoweron"] = "FALSE"
      v.vmx["gui.viewModeAtPowerOn"] = "windowed"
      v.vmx["gui.fitguestusingnativedisplayresolution"] = "FALSE"
      v.memory = 2048
      v.cpus = 1
      v.gui = true
    end

    cfg.vm.provider "vmware_esxi" do |ve, override|
      override.vm.box = "../Boxes/windows_2016_vmware.box"
      ve.esxi_hostname = "hp-vmware"
      ve.esxi_username = "root"
      ve.esxi_password = "prompt:"
      ve.esxi_virtual_network = "Vlan_20"
      ve.esxi_disk_store = "RAID_Storage"
      ve.esxi_guest_name = "wef"
      ve.esxi_guest_memsize = "2048"
      ve.esxi_guest_numvcpus = "1"
    end

    cfg.vm.provider "virtualbox" do |vb, override|
      vb.gui = true
      vb.customize ["modifyvm", :id, "--memory", 2048]
      vb.customize ["modifyvm", :id, "--cpus", 1]
      vb.customize ["modifyvm", :id, "--vram", "32"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all" ]
    end
  end
end
